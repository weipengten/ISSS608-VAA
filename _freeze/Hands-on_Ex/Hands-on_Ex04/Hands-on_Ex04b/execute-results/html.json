{
  "hash": "8339f18412e958b7011efd8704a44409",
  "result": {
    "markdown": "---\ntitle: \"Hands-on Exercise 4b: Visualising Uncertainty\"\nauthor: \"Ten Wei Peng\"\ndate: \"May 03, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n## Learning Outcome\n\nVisualising uncertainty is relatively new in statistical graphics. In this chapter, you will gain hands-on experience on creating statistical graphics for visualising uncertainty. By the end of this chapter you will be able:\n\n-   to plot statistics error bars by using ggplot2,\n\n-   to plot interactive error bars by combining ggplot2, plotly and DT,\n\n-   to create advanced by using ggdist, and\n\n-   to create hypothetical outcome plots (HOPs) by using ungeviz package.\n\n## Getting Started\n\n### Installing and loading the packages\n\nFor the purpose of this exercise, the following R packages will be used, they are:\n\n-   tidyverse, a family of R packages for data science process,\n\n-   plotly for creating interactive plot,\n\n-   gganimate for creating animation plot,\n\n-   DT for displaying interactive html table,\n\n-   crosstalk for for implementing cross-widget interactions (currently, linked brushing and filtering), and\n\n-   ggdist for visualising distribution and uncertainty.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndevtools::install_github(\"wilkelab/ungeviz\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(ungeviz, plotly, crosstalk,\n               DT, ggdist, ggridges,\n               colorspace, gganimate, tidyverse)\n```\n:::\n\n\n### Data import\n\nFor the purpose of this exercise, *Exam_data.csv* will be used.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam <- read_csv(\"data/Exam_data.csv\")\n```\n:::\n\n\n## Visualizing the uncertainty of point estimates\n\nA point estimate is a single number, such as a mean. Uncertainty is expressed as standard error, confidence interval, or credible interval\n\n::: callout-note\n### Important\n\n-   Don't confuse the uncertainty of a point estimate with the variation in the sample\n:::\n\nIn this section, you will learn how to plot error bars of maths scores by race by using data provided in exam tibble data frame.\n\nFirstly, code chunk below will be used to derive the necessary summary statistics. `my_sum`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_sum <- exam %>%\n  group_by(RACE) %>%\n  summarise(\n    n=n(),\n    mean=mean(MATHS),\n    sd=sd(MATHS)\n    ) %>%\n  mutate(se=sd/sqrt(n-1))\n```\n:::\n\n\n::: callout-note\n### Things to learn from the code chunk above\n\n-   group_by() of dplyr package is used to group the observation by RACE,\n-   summarise() is used to compute the count of observations, mean, standard deviation\n-   mutate() is used to derive standard error of Maths by RACE, and\n-   the output is save as a tibble data table called my_sum.\n:::\n\n::: callout-note\n### Note\n\nFor the mathematical explanation, please refer to Slide 20 of Lesson 4.\n:::\n\nNext, the code chunk below will be used to display my_sum tibble data frame in an html table format.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::kable(head(my_sum), format = 'html')\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> RACE </th>\n   <th style=\"text-align:right;\"> n </th>\n   <th style=\"text-align:right;\"> mean </th>\n   <th style=\"text-align:right;\"> sd </th>\n   <th style=\"text-align:right;\"> se </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Chinese </td>\n   <td style=\"text-align:right;\"> 193 </td>\n   <td style=\"text-align:right;\"> 76.50777 </td>\n   <td style=\"text-align:right;\"> 15.69040 </td>\n   <td style=\"text-align:right;\"> 1.132357 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Indian </td>\n   <td style=\"text-align:right;\"> 12 </td>\n   <td style=\"text-align:right;\"> 60.66667 </td>\n   <td style=\"text-align:right;\"> 23.35237 </td>\n   <td style=\"text-align:right;\"> 7.041005 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Malay </td>\n   <td style=\"text-align:right;\"> 108 </td>\n   <td style=\"text-align:right;\"> 57.44444 </td>\n   <td style=\"text-align:right;\"> 21.13478 </td>\n   <td style=\"text-align:right;\"> 2.043177 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Others </td>\n   <td style=\"text-align:right;\"> 9 </td>\n   <td style=\"text-align:right;\"> 69.66667 </td>\n   <td style=\"text-align:right;\"> 10.72381 </td>\n   <td style=\"text-align:right;\"> 3.791438 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n### Plotting standard error bars of point estimates\n\nNow we are ready to plot the standard error bars of mean maths score by race as shown below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean \n          maths score by rac\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04b_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n::: callout-note\n#### Things to learn from the code chunk above\n\n-   The error bars are computed by using the formula mean +/-se.\n-   For geom_point(), it is important to indicate stat=“identity”.\n:::\n\n### Plotting confidence interval of point estimates\n\nInstead of plotting the standard error bar of point estimates, we can also plot the confidence intervals of mean maths score by race..\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex04b_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n::: callout-note\n#### Things to learn from the code chunk above\n\n-   The confidence intervals are computed by using the formula mean+/-1.96\\*se.\n-   The error bars is sorted by using the average maths scores.\n-   labs() argument of ggplot2 is used to change the x-axis label.\n:::\n\n### Visualizing the uncertainty of point estimates with interactive error bars\n\nIn this section, you will learn how to plot interactive error bars for the 99% confidence interval of mean maths score by race as shown in the figure below.\n\n## Visualising Uncertainty: **ggdist** package\n\n-   [**ggdist**](https://mjskay.github.io/ggdist/index.html) is an R package that provides a flexible set of ggplot2 geoms and stats designed especially for visualising distributions and uncertainty.\n-   It is designed for both frequentist and Bayesian uncertainty visualization, taking the view that uncertainty visualization can be unified through the perspective of distribution visualization:\n    -   for frequentist models, one visualises confidence distributions or bootstrap distributions (see vignette(\"freq-uncertainty-vis\"));\n    -   for Bayesian models, one visualises probability distributions (see the tidybayes package, which builds on top of ggdist).\n\n### ![](images/clipboard-1259962916.png)\n\n### Visualizing the uncertainty of point estimates: **ggdist** methods\n\nIn the code chunk below, [`stat_pointinterval()`](https://mjskay.github.io/ggdist/reference/stat_pointinterval.html) of **ggdist** is used to build a visual for displaying distribution of maths scores by race.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam %>%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval() +   #<<\n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04b_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n::: callout-note\n#### Note\n\nThis function comes with many arguments, students are advised to read the syntax reference for more detail.\n:::\n\nFor example, in the code chunk below the following arguments are used:\n\n-   width = 0.95\n-   point = median\n-   interval = qi\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam %>%\n  ggplot(aes(x = RACE, y = MATHS)) +\n  stat_pointinterval(.width = 0.95,\n  .point = median,\n  .interval = qi) +\n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04b_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n### Visualizing the uncertainty of point estimates: **ggdist** methods\n\n::: callout-note\n### Your turn\n\nMakeover the plot on previous slide by showing 95% and 99% confidence intervals.\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam %>%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval(\n    show.legend = FALSE) +   \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04b_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\nGentle advice: This function comes with many arguments, students are advised to read the syntax reference for more detail.\n\n### Visualizing the uncertainty of point estimates: **ggdist** methods\n\nIn the code chunk below, [`stat_gradientinterval()`](https://mjskay.github.io/ggdist/reference/stat_gradientinterval.html) of **ggdist** is used to build a visual for displaying distribution of maths scores by race.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam %>%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_gradientinterval(   \n    fill = \"skyblue\",      \n    show.legend = TRUE     \n  ) +                        \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Gradient + interval plot\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04b_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\nGentle advice: This function comes with many arguments, students are advised to read the syntax reference for more detail.\n\n## Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)\n\nStep 1: Installing ungeviz package\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndevtools::install_github(\"wilkelab/ungeviz\")\n```\n:::\n\n\nNote: You only need to perform this step once.\n\nStep 2: Launch the application in R\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ungeviz)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = exam, \n       (aes(x = factor(RACE), y = MATHS))) +\n  geom_point(position = position_jitter(\n    height = 0.3, width = 0.05), \n    size = 0.4, color = \"#0072B2\", alpha = 1/2) +\n  geom_hpline(data = sampler(25, group = RACE), height = 0.6, color = \"#D55E00\") +\n  theme_bw() + \n  # `.draw` is a generated column indicating the sample draw\n  transition_states(.draw, 1, 3)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04b_files/figure-html/unnamed-chunk-14-1.gif)\n:::\n:::\n\n\n## Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = exam, \n       (aes(x = factor(RACE), \n            y = MATHS))) +\n  geom_point(position = position_jitter(\n    height = 0.3, \n    width = 0.05), \n    size = 0.4, \n    color = \"#0072B2\", \n    alpha = 1/2) +\n  geom_hpline(data = sampler(25, \n                             group = RACE), \n              height = 0.6, \n              color = \"#D55E00\") +\n  theme_bw() + \n  transition_states(.draw, 1, 3)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04b_files/figure-html/unnamed-chunk-15-1.gif)\n:::\n:::\n",
    "supporting": [
      "Hands-on_Ex04b_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}