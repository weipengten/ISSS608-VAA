{
  "hash": "925a8ee9ce2a0fd2681984e5b60430f8",
  "result": {
    "markdown": "---\ntitle: \"Take Home Exercise 3: WORK IN PROGRESS\"\nauthor: \"Ten Wei Peng\"\ndate: \"May 13, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n# Overview\n\n\n# 1.Data Preparation\n\n## 1.1 Loading R Packages\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\npacman::p_load(readtext, quanteda, tidytext,  tidyverse)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\ntext_data <- readtext(paste0(\"data/articles\", \"/*\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nusenet_words <- text_data %>%\n  unnest_tokens(word,text) %>%\n  filter(str_detect(word, \"[a-z']$\"),\n         !word %in% stop_words$word)\n```\n:::\n\n\n\n\n\n## 1.2. Loading the Data\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\npacman::p_load(jsonlite, igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nmc1_data <- fromJSON(\"data/mc1.json\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nmc1_links <- as_tibble(mc1_data$links) %>%\n  distinct() %>%\n  mutate(source = as.character(source),\n         target = as.character(target),\n         type = as.character(type)) %>%\n  group_by(source, target, type) %>%\n  summarise(weights = n()) %>%\n  filter(source != target) %>%\n  ungroup()\n\n# Convert nodes to tibble, modify variable types, and select required columns\nmc1_nodes <- as_tibble(mc1_data$nodes) %>%\n  mutate(id = as.character(id), \n         type = as.character(type), \n         country = as.character(country)) %>%\n  select(id, country, type )\n```\n:::\n\n\n## 1.3. Data Cleaning\n\n::: panel-tabset\n### Links\n\n::: {.cell}\n\n```{.r .cell-code}\n# Check for columns with missing values\ncolSums(is.na(mc1_links))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n source  target    type weights \n      0       0       0       0 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmc1_links[duplicated(mc1_links),]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 0 × 4\n# ℹ 4 variables: source <chr>, target <chr>, type <chr>, weights <int>\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(mc1_links)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 4,960\nColumns: 4\n$ source  <chr> \"6. America Transit Plc\", \"6. America Transit Plc\", \"6. Americ…\n$ target  <chr> \"Cod Table\", \"Nemo Reef\", \"Paackland Fishermen's Rights Enforc…\n$ type    <chr> \"Event.Fishing.OverFishing\", \"Event.Fishing.OverFishing\", \"Eve…\n$ weights <int> 6, 1, 2, 1, 6, 3, 2, 1, 1, 1, 1, 1, 3, 1, 1, 2, 1, 1, 1, 1, 1,…\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nunique_source <- unique(mc1_links$source)\nprint(unique_source)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nunique_target <- unique(mc1_links$target)\nprint(unique_target)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nunique_type <- unique(mc1_links$type)\nprint(unique_type)\n```\n:::\n\n\n\n\n\n### Nodes\n\n::: {.cell}\n\n```{.r .cell-code}\n# Check for columns with missing values\ncolSums(is.na(mc1_nodes))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     id country    type \n      0       4       0 \n```\n:::\n:::\n\nThere are 4 missing values from the **country** column.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc1_nodes[duplicated(mc1_nodes),]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 0 × 3\n# ℹ 3 variables: id <chr>, country <chr>, type <chr>\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nunique_country <- unique(mc1_nodes$country)\nprint(unique_country)\n```\n:::\n\n\n\n\n\n\n\n\n\n\n:::\n\n\n### Step 2: Extract Data Relevant to the Comparison\n#### Identify nodes and edges extracted by each algorithm\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# shadgpt_nodes <- mc1_links$links %>%\n#   filter(_algorithm == \"ShadGPT\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# bassline_nodes <- mc1_links$links \n# filter(_algorithm == \"BassLine\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Extract articles related to these nodes and edges\n# shadgpt_articles <- usenet_words[shadgpt_nodes$_raw_source]\n# bassline_articles <- usenet_words[bassline_nodes$_raw_source]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nGAStech_graph <- tbl_graph(nodes = mc1_nodes,\n                           edges = mc1_links, \n                           directed = TRUE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nGAStech_graph\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tbl_graph: 215 nodes and 4960 edges\n#\n# A bipartite multigraph with 1 component\n#\n# Node Data: 215 × 3 (active)\n   id                        country type                              \n   <chr>                     <chr>   <chr>                             \n 1 Sanchez-Moreno            Oceanus Entity.Organization.FishingCompany\n 2 Frey Inc                  Oceanus Entity.Organization.FishingCompany\n 3 Bowers Group              Oceanus Entity.Organization.FishingCompany\n 4 Franco-Stuart             Oceanus Entity.Organization.FishingCompany\n 5 Murphy, Marshall and Pope Oceanus Entity.Organization.FishingCompany\n 6 Alvarez PLC               Oceanus Entity.Organization.FishingCompany\n 7 Wilcox-Nelson             Oceanus Entity.Organization.FishingCompany\n 8 Kelly-Smith               Oceanus Entity.Organization.FishingCompany\n 9 Jackson Inc               Oceanus Entity.Organization.FishingCompany\n10 Clarke, Scott and Sloan   Oceanus Entity.Organization.FishingCompany\n# ℹ 205 more rows\n#\n# Edge Data: 4,960 × 4\n   from    to type                      weights\n  <int> <int> <chr>                       <int>\n1   191   143 Event.Fishing.OverFishing       6\n2   191   138 Event.Fishing.OverFishing       1\n3   191   201 Event.Criticize                 2\n# ℹ 4,957 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes()) +\n  geom_node_point(aes(colour = country, \n                      size = 1))\n\ng + theme_graph()\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nset_graph_style() \n\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=weights), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = country), \n                  size = 2)\n  \ng + facet_edges(~type) +\n  th_foreground(foreground = \"grey80\",  \n                border = TRUE) +\n  theme(legend.position = 'bottom')\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nmc3_data <- fromJSON(\"data/mc3.json\")\n```\n:::\n",
    "supporting": [
      "Take-Home_Ex03_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}