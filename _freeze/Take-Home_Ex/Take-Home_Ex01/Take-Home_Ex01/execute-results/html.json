{
  "hash": "4a296d5ffe9a7127caa9a34fc487c133",
  "result": {
    "markdown": "---\ntitle: \"Take Home Exercise 1 - Geospatial Analytics for Public Good\"\nauthor: \"Ten Wei Peng\"\ndate: \"April 13, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n## The Task\n\nAssuming the role of a graphical editor of a median company, you are requested to prepare minimum two and maximum three data visualisation to reveal the private residential market and sub-markets of Singapore for the 1st quarter of 2024.\n\n## The Data\n\nTo accomplish the task, transaction data of REALIS will be used. A complete set of the private residential property transaction data from 1st January 2023 to 31st March 2024 have been downloaded via SMU e-library database service.\n\n## Install R Package\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse,forcats)\n```\n:::\n\n\n# 1. Importing Data\n\nWe will import the data as a first step before proceeding with data cleaning, data wrangling and data ex\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get list of CSV files in the directory\nfile_list <- list.files(path = \"data\", pattern = \"*.csv\", full.names = TRUE)\n\n# Read and bind all CSV files into one data frame\ncombined_data <- file_list %>%\n  map_df(read_csv)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# View the first few rows of the combined data\nhead(combined_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 21\n  `Project Name`       `Transacted Price ($)` `Area (SQFT)` `Unit Price ($ PSF)`\n  <chr>                                 <dbl>         <dbl>                <dbl>\n1 THE REEF AT KING'S …                2317000          883.                 2625\n2 URBAN TREASURES                     1823500          883.                 2066\n3 NORTH GAIA                          1421112         1076.                 1320\n4 NORTH GAIA                          1258112         1033.                 1218\n5 PARC BOTANNIA                       1280000          872.                 1468\n6 NANYANG PARK                        5870000         3323.                 1767\n# ℹ 17 more variables: `Sale Date` <chr>, Address <chr>, `Type of Sale` <chr>,\n#   `Type of Area` <chr>, `Area (SQM)` <dbl>, `Unit Price ($ PSM)` <dbl>,\n#   `Nett Price($)` <chr>, `Property Type` <chr>, `Number of Units` <dbl>,\n#   Tenure <chr>, `Completion Date` <chr>, `Purchaser Address Indicator` <chr>,\n#   `Postal Code` <chr>, `Postal District` <chr>, `Postal Sector` <chr>,\n#   `Planning Region` <chr>, `Planning Area` <chr>\n```\n:::\n:::\n\n\n# 2. Data Wrangling (High-Level Overview)\n\n::: panel-tabset\n## 2.1. Data Preview\n\n### First look at our Data\n\n**Let's get an understanding of our column features and their datatypes and see if we need to make any changes with the use of `glimpse()`.**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(combined_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 26,806\nColumns: 21\n$ `Project Name`                <chr> \"THE REEF AT KING'S DOCK\", \"URBAN TREASU…\n$ `Transacted Price ($)`        <dbl> 2317000, 1823500, 1421112, 1258112, 1280…\n$ `Area (SQFT)`                 <dbl> 882.65, 882.65, 1076.40, 1033.34, 871.88…\n$ `Unit Price ($ PSF)`          <dbl> 2625, 2066, 1320, 1218, 1468, 1767, 1095…\n$ `Sale Date`                   <chr> \"01 Jan 2023\", \"02 Jan 2023\", \"02 Jan 20…\n$ Address                       <chr> \"12 HARBOURFRONT AVENUE #05-32\", \"205 JA…\n$ `Type of Sale`                <chr> \"New Sale\", \"New Sale\", \"New Sale\", \"New…\n$ `Type of Area`                <chr> \"Strata\", \"Strata\", \"Strata\", \"Strata\", …\n$ `Area (SQM)`                  <dbl> 82.0, 82.0, 100.0, 96.0, 81.0, 308.7, 42…\n$ `Unit Price ($ PSM)`          <dbl> 28256, 22238, 14211, 13105, 15802, 19015…\n$ `Nett Price($)`               <chr> \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", …\n$ `Property Type`               <chr> \"Condominium\", \"Condominium\", \"Executive…\n$ `Number of Units`             <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ Tenure                        <chr> \"99 yrs from 12/01/2021\", \"Freehold\", \"9…\n$ `Completion Date`             <chr> \"Uncompleted\", \"Uncompleted\", \"Uncomplet…\n$ `Purchaser Address Indicator` <chr> \"HDB\", \"Private\", \"HDB\", \"HDB\", \"HDB\", \"…\n$ `Postal Code`                 <chr> \"097996\", \"419535\", \"269343\", \"269294\", …\n$ `Postal District`             <chr> \"04\", \"14\", \"27\", \"27\", \"28\", \"19\", \"10\"…\n$ `Postal Sector`               <chr> \"09\", \"41\", \"26\", \"26\", \"79\", \"54\", \"27\"…\n$ `Planning Region`             <chr> \"Central Region\", \"East Region\", \"North …\n$ `Planning Area`               <chr> \"Bukit Merah\", \"Bedok\", \"Yishun\", \"Yishu…\n```\n:::\n:::\n\n\n::: callout-note\n**Some key observations of the data using `summary()`:**\n\n-   There seem to be 6 missing data for `Area (SQM)`\n\n-   `Transacted Price ($)` has a min of 440000 and does not have 0 values.\n\n-   `Sale Date`, is in inappropriate data format.\n\n-   `Nett Price($)` looks unuseable, we might need to drop it\n\n-   `Completion Date` has missing data in the form of '-', care needs to be taken if we are to use this column\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# summary statistics\nsummary(combined_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n Project Name       Transacted Price ($)  Area (SQFT)       Unit Price ($ PSF)\n Length:26806       Min.   :   440000    Min.   :   322.9   Min.   : 138      \n Class :character   1st Qu.:  1280000    1st Qu.:   721.2   1st Qu.:1384      \n Mode  :character   Median :  1660000    Median :   990.3   Median :1762      \n                    Mean   :  2143286    Mean   :  1191.6   Mean   :1852      \n                    3rd Qu.:  2320000    3rd Qu.:  1302.4   3rd Qu.:2260      \n                    Max.   :392180000    Max.   :144883.4   Max.   :5756      \n                                                                              \n  Sale Date           Address          Type of Sale       Type of Area      \n Length:26806       Length:26806       Length:26806       Length:26806      \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n   Area (SQM)      Unit Price ($ PSM) Nett Price($)      Property Type     \n Min.   :   30.0   Min.   : 1484      Length:26806       Length:26806      \n 1st Qu.:   67.0   1st Qu.:14893      Class :character   Class :character  \n Median :   92.0   Median :18966      Mode  :character   Mode  :character  \n Mean   :  110.5   Mean   :19930                                           \n 3rd Qu.:  121.0   3rd Qu.:24327                                           \n Max.   :13460.0   Max.   :61962                                           \n NA's   :6                                                                 \n Number of Units     Tenure          Completion Date   \n Min.   : 1.000   Length:26806       Length:26806      \n 1st Qu.: 1.000   Class :character   Class :character  \n Median : 1.000   Mode  :character   Mode  :character  \n Mean   : 1.005                                        \n 3rd Qu.: 1.000                                        \n Max.   :60.000                                        \n                                                       \n Purchaser Address Indicator Postal Code        Postal District   \n Length:26806                Length:26806       Length:26806      \n Class :character            Class :character   Class :character  \n Mode  :character            Mode  :character   Mode  :character  \n                                                                  \n                                                                  \n                                                                  \n                                                                  \n Postal Sector      Planning Region    Planning Area     \n Length:26806       Length:26806       Length:26806      \n Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character  \n                                                         \n                                                         \n                                                         \n                                                         \n```\n:::\n:::\n\n\n## 2.2. Missing Data\n\n### Dealing with Missing Data\n\n**Let's get the rows that has the missing data!.**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Check for the rows with null values\nnull_check <- combined_data %>% \n                  filter(is.na(`Area (SQM)`))\nnull_check\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 21\n  `Project Name`       `Transacted Price ($)` `Area (SQFT)` `Unit Price ($ PSF)`\n  <chr>                                 <dbl>         <dbl>                <dbl>\n1 CALDECOTT HILL ESTA…               22250000        10931.                 2036\n2 CALDECOTT HILL ESTA…               22000000        11083.                 1985\n3 RAFFLES PARK                       25300000        11071.                 2285\n4 BRADDELL HEIGHTS ES…               20300000        14274.                 1422\n5 JERVOISVILLE                       21020000        11642.                 1805\n6 N.A.                               16100000        14199.                 1134\n# ℹ 17 more variables: `Sale Date` <chr>, Address <chr>, `Type of Sale` <chr>,\n#   `Type of Area` <chr>, `Area (SQM)` <dbl>, `Unit Price ($ PSM)` <dbl>,\n#   `Nett Price($)` <chr>, `Property Type` <chr>, `Number of Units` <dbl>,\n#   Tenure <chr>, `Completion Date` <chr>, `Purchaser Address Indicator` <chr>,\n#   `Postal Code` <chr>, `Postal District` <chr>, `Postal Sector` <chr>,\n#   `Planning Region` <chr>, `Planning Area` <chr>\n```\n:::\n:::\n\n\nGiven the data above, it is impossible for us to understand if there is a systemic reason for the cause of missing data, hence we shall proceed to drop these rows from analysis.The current data now is reduced to **26800** observations from the initial **26806**.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter out rows where `Area (SQM)` is not missing\ncombined_data <- combined_data %>% \n                  filter(!is.na(`Area (SQM)`))\n```\n:::\n\n\nWe are not planning to utilise `Completion Date`, so we will not make any changes regarding that\n\n## 2.3. Data Type\n\n### Converting Data Types\n\n**From the Data Exploration earlier, we found `'Sale Date'` to be in `chr` format, we need to change it to `date` format to analyze the data properly.**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncombined_data <- combined_data %>%\n  mutate(`Sale Date` = as.Date(`Sale Date`, format = \"%d %b %Y\"))\n\n# View the structure of the modified data\nstr(combined_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ntibble [26,800 × 21] (S3: tbl_df/tbl/data.frame)\n $ Project Name               : chr [1:26800] \"THE REEF AT KING'S DOCK\" \"URBAN TREASURES\" \"NORTH GAIA\" \"NORTH GAIA\" ...\n $ Transacted Price ($)       : num [1:26800] 2317000 1823500 1421112 1258112 1280000 ...\n $ Area (SQFT)                : num [1:26800] 883 883 1076 1033 872 ...\n $ Unit Price ($ PSF)         : num [1:26800] 2625 2066 1320 1218 1468 ...\n $ Sale Date                  : Date[1:26800], format: \"2023-01-01\" \"2023-01-02\" ...\n $ Address                    : chr [1:26800] \"12 HARBOURFRONT AVENUE #05-32\" \"205 JALAN EUNOS #08-02\" \"29 YISHUN CLOSE #08-10\" \"45 YISHUN CLOSE #07-42\" ...\n $ Type of Sale               : chr [1:26800] \"New Sale\" \"New Sale\" \"New Sale\" \"New Sale\" ...\n $ Type of Area               : chr [1:26800] \"Strata\" \"Strata\" \"Strata\" \"Strata\" ...\n $ Area (SQM)                 : num [1:26800] 82 82 100 96 81 ...\n $ Unit Price ($ PSM)         : num [1:26800] 28256 22238 14211 13105 15802 ...\n $ Nett Price($)              : chr [1:26800] \"-\" \"-\" \"-\" \"-\" ...\n $ Property Type              : chr [1:26800] \"Condominium\" \"Condominium\" \"Executive Condominium\" \"Executive Condominium\" ...\n $ Number of Units            : num [1:26800] 1 1 1 1 1 1 1 1 1 1 ...\n $ Tenure                     : chr [1:26800] \"99 yrs from 12/01/2021\" \"Freehold\" \"99 yrs from 15/02/2021\" \"99 yrs from 15/02/2021\" ...\n $ Completion Date            : chr [1:26800] \"Uncompleted\" \"Uncompleted\" \"Uncompleted\" \"Uncompleted\" ...\n $ Purchaser Address Indicator: chr [1:26800] \"HDB\" \"Private\" \"HDB\" \"HDB\" ...\n $ Postal Code                : chr [1:26800] \"097996\" \"419535\" \"269343\" \"269294\" ...\n $ Postal District            : chr [1:26800] \"04\" \"14\" \"27\" \"27\" ...\n $ Postal Sector              : chr [1:26800] \"09\" \"41\" \"26\" \"26\" ...\n $ Planning Region            : chr [1:26800] \"Central Region\" \"East Region\" \"North Region\" \"North Region\" ...\n $ Planning Area              : chr [1:26800] \"Bukit Merah\" \"Bedok\" \"Yishun\" \"Yishun\" ...\n```\n:::\n\n```{.r .cell-code}\n# View the first few rows of the modified data\nhead(combined_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 21\n  `Project Name`       `Transacted Price ($)` `Area (SQFT)` `Unit Price ($ PSF)`\n  <chr>                                 <dbl>         <dbl>                <dbl>\n1 THE REEF AT KING'S …                2317000          883.                 2625\n2 URBAN TREASURES                     1823500          883.                 2066\n3 NORTH GAIA                          1421112         1076.                 1320\n4 NORTH GAIA                          1258112         1033.                 1218\n5 PARC BOTANNIA                       1280000          872.                 1468\n6 NANYANG PARK                        5870000         3323.                 1767\n# ℹ 17 more variables: `Sale Date` <date>, Address <chr>, `Type of Sale` <chr>,\n#   `Type of Area` <chr>, `Area (SQM)` <dbl>, `Unit Price ($ PSM)` <dbl>,\n#   `Nett Price($)` <chr>, `Property Type` <chr>, `Number of Units` <dbl>,\n#   Tenure <chr>, `Completion Date` <chr>, `Purchaser Address Indicator` <chr>,\n#   `Postal Code` <chr>, `Postal District` <chr>, `Postal Sector` <chr>,\n#   `Planning Region` <chr>, `Planning Area` <chr>\n```\n:::\n:::\n\n\n## 2.4. Duplicates Check\n\n### Dealing with Duplicates\n\n**Let's check for duplicates!**\n\nPassed initial checks in code chunk below for whole duplicate rows,\n\n\n::: {.cell}\n\n```{.r .cell-code}\nduplicate <- combined_data %>%\n  group_by_all() %>%\n  filter(n()>1) %>%\n  ungroup()\nduplicate\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 0 × 21\n# ℹ 21 variables: Project Name <chr>, Transacted Price ($) <dbl>,\n#   Area (SQFT) <dbl>, Unit Price ($ PSF) <dbl>, Sale Date <date>,\n#   Address <chr>, Type of Sale <chr>, Type of Area <chr>, Area (SQM) <dbl>,\n#   Unit Price ($ PSM) <dbl>, Nett Price($) <chr>, Property Type <chr>,\n#   Number of Units <dbl>, Tenure <chr>, Completion Date <chr>,\n#   Purchaser Address Indicator <chr>, Postal Code <chr>,\n#   Postal District <chr>, Postal Sector <chr>, Planning Region <chr>, …\n```\n:::\n:::\n\n\n::: callout-note\nProceed to checking for duplicates in the Address column, we seemed to have found 9 duplicated observations. However, they have different `\"Sale Date\"`. As this is expected, we will ignore the case of duplicate address found here and proceed ahead.\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nduplicates <- combined_data[duplicated(combined_data$Address), ]\nfiltered_data <- combined_data[combined_data$Address %in% duplicates$Address, ]\n```\n:::\n\n:::\n\n# 3. Data Exploration\n\n::: panel-tabset\n## 3.1. Categorical Data\n\n### Dealing with Categorical Data\n\n**Let's get an understanding of the number of unique categories in our categorical data.**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter character columns\nchar_columns <- Filter(is.character, combined_data)\n\n# Count unique categories for each character column\nunique_counts <- sapply(char_columns, function(col) length(unique(col)))\n\n# Display the unique counts\nprint(unique_counts)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n               Project Name                     Address \n                       2209                       26791 \n               Type of Sale                Type of Area \n                          3                           2 \n              Nett Price($)               Property Type \n                         37                           6 \n                     Tenure             Completion Date \n                        581                          80 \nPurchaser Address Indicator                 Postal Code \n                          3                        6302 \n            Postal District               Postal Sector \n                         28                          72 \n            Planning Region               Planning Area \n                          5                          41 \n```\n:::\n:::\n\n\n::: callout-note\n**Some key observations of the data using `summary()`:**\n\n-   Columns such as `Type of Sale` , `Type of Area`, `Property Type`, `Planning Region` , 'Purchaser Address Indicator' has few categories and require minimal transformations.\n\n-   Columns such as `Project Name` , `Address`, `Tenure`, `Completion Date`, `Postal District`, `Postal Code`, `Planning Area` has many categories and might require grouping to be utilised effectively.\n:::\n\n**Define a function to count and print unique categories for a given column.**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncount_unique_categories <- function(data, column_name) {\n  cat(\"**\", column_name, \"**\\n\", sep = \"\")\n  category_counts <- table(data[[column_name]])\n  sorted_counts <- sort(category_counts, decreasing = TRUE)\n  print(sorted_counts)\n}\n```\n:::\n\n\n**Call the function for each column**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncount_unique_categories(combined_data, 'Type of Sale')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n**Type of Sale**\n\n  Resale New Sale Sub Sale \n   16611     8644     1545 \n```\n:::\n\n```{.r .cell-code}\ncount_unique_categories(combined_data, 'Type of Area')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n**Type of Area**\n\nStrata   Land \n 25236   1564 \n```\n:::\n\n```{.r .cell-code}\ncount_unique_categories(combined_data, 'Property Type')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n**Property Type**\n\n            Apartment           Condominium Executive Condominium \n                10772                 10643                  3534 \n        Terrace House   Semi-Detached House        Detached House \n                 1100                   524                   227 \n```\n:::\n\n```{.r .cell-code}\ncount_unique_categories(combined_data, 'Purchaser Address Indicator')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n**Purchaser Address Indicator**\n\nPrivate     HDB     N.A \n  15348    8719    2733 \n```\n:::\n\n```{.r .cell-code}\ncount_unique_categories(combined_data, 'Postal District')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n**Postal District**\n\n  19   15   23   10   18   21   26   27   05   09   16   14   22   03   11   20 \n2920 2762 2662 1681 1480 1449 1365 1270 1195 1003  998  940  899  875  823  696 \n  28   13   12   17   04   25   07   02   08   01   24   06 \n 568  566  548  357  338  322  303  295  277  181   18    9 \n```\n:::\n\n```{.r .cell-code}\ncount_unique_categories(combined_data, 'Planning Region')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n**Planning Region**\n\n   Central Region North East Region       West Region       East Region \n            12196              5036              4300              3643 \n     North Region \n             1625 \n```\n:::\n\n```{.r .cell-code}\ncount_unique_categories(combined_data, 'Planning Area')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n**Planning Area**\n\n     Bukit Timah            Bedok       Ang Mo Kio    Marine Parade \n            2343             1752             1558             1551 \n     Bukit Batok          Geylang          Hougang         Tampines \n            1314             1227             1209             1055 \n       Serangoon       Queenstown           Novena         Sengkang \n             980              945              929              836 \n       Pasir Ris    Bukit Panjang           Yishun          Kallang \n             832              828              776              681 \n       Toa Payoh         Clementi          Tanglin      Bukit Merah \n             657              647              611              610 \n   Choa Chu Kang    Downtown Core      Jurong East        Sembawang \n             594              587              531              502 \n          Bishan          Punggol     River Valley      Jurong West \n             460              453              374              368 \n          Newton        Woodlands           Outram           Rochor \n             348              320              251              209 \n Singapore River Southern Islands          Orchard           Museum \n             140              106              102               65 \n          Mandai           Tengah           Changi     Sungei Kadut \n              25               18                3                2 \n      Paya Lebar \n               1 \n```\n:::\n:::\n\n\n::: callout-note\n**Some key observations of `Purchaser Address Indicator`**\n\n-   Note that some information regarding `Purchaser Address Indicator`is not provided at all and is labelled as `N.A` and this amounts to `2733` rows of data having such a phenomena.\n\n-   Further preprocessing needs to be taken if this data is required to be utilised.\n:::\n\n## 3.2. Continuous Data\n\n### Dealing with Continuous Data\n\n**Let's get an understanding of the data range in our Continuous data.**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter character columns\nnumeric_columns <- Filter(is.numeric, combined_data)\n\n# Calculate the range of values for each numeric column\ncolumn_ranges <- sapply(numeric_columns, function(x) range(x, na.rm = TRUE))\n\n# Print the range for each column\nprint(column_ranges)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     Transacted Price ($) Area (SQFT) Unit Price ($ PSF) Area (SQM)\n[1,]               440000      322.92                138         30\n[2,]            392180000   144883.44               5756      13460\n     Unit Price ($ PSM) Number of Units\n[1,]               1484               1\n[2,]              61962              60\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(numeric_columns)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n Transacted Price ($)  Area (SQFT)       Unit Price ($ PSF)   Area (SQM)     \n Min.   :   440000    Min.   :   322.9   Min.   : 138       Min.   :   30.0  \n 1st Qu.:  1280000    1st Qu.:   721.2   1st Qu.:1384       1st Qu.:   67.0  \n Median :  1660000    Median :   990.3   Median :1762       Median :   92.0  \n Mean   :  2139028    Mean   :  1189.2   Mean   :1852       Mean   :  110.5  \n 3rd Qu.:  2320000    3rd Qu.:  1302.4   3rd Qu.:2260       3rd Qu.:  121.0  \n Max.   :392180000    Max.   :144883.4   Max.   :5756       Max.   :13460.0  \n Unit Price ($ PSM) Number of Units \n Min.   : 1484      Min.   : 1.000  \n 1st Qu.:14893      1st Qu.: 1.000  \n Median :18966      Median : 1.000  \n Mean   :19930      Mean   : 1.005  \n 3rd Qu.:24327      3rd Qu.: 1.000  \n Max.   :61962      Max.   :60.000  \n```\n:::\n:::\n\n\n::: callout-note\n**Some key observations of the observed ranges**\n\n-   It is evident from the wide range of all the numeric column features that criteria for analysis needs to be precisely set to allow for an accurate analysis\n:::\n:::\n\n# 3. Data Exploration (using Data Viz)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define the new labels for each category\nnew_labels <- c(\"Apartment\", \"Condo\", \"Executive Condo\", \"Terrace\", \"Semi-Detached\", \"Detached\")\n\ncombined_data = combined_data %>%\n  mutate(`Property Type` = recode(`Property Type`, \n                        \"Apartment\" = \"Apartment\",\n                        \"Condominium \" = \"Condo\",\n                        \"Executive Condominium\" = \"Executive Condos\",\n                        \"Terrace House\" = \"Terrace\",\n                        \"Semi-Detached House\" = \"Semi-Detached\",\n                        \"Detached House\" = \"Detached\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter for rows where Property Type is \"Resale\"\nresale_data <- combined_data %>%\n  filter(`Number of Units` == 1)\n\n# Create ggplot with filtered data\nggplot(data = resale_data, \n       aes(y = `Transacted Price ($)`, x = `Property Type`)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun = \"mean\",         \n               colour = \"red\",        \n               size = 4)\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex01_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Take-Home_Ex01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}