---
title: "In-class Exercise 06b: Network Visualisation"
author: "Ten Wei Peng"
date: "May 18, 2024"
date-modified: "last-modified"
execute: 
  eval: true
  echo: true
  warning: false
  freeze: true
---

## Getting Started

## Installing and loading the required libraries

```{r}
#| code-fold: true
#| code-summary: "Show the code" 
pacman::p_load(igraph, tidygraph, ggraph, 
               visNetwork, lubridate, clock,
               tidyverse, graphlayouts, ggforce, skimr, tidytext, jsonlite)
```



## Loading the Data
```{r}
mc3_data <- fromJSON("data/MC3_2023.json")
```

::: panel-tabset

### Links
```{r}
#| code-fold: true
#| code-summary: "Show the code" 
mc3_edges <-
  as_tibble(mc3_data$links) %>%
  distinct() %>%
  mutate(source =
           as.character(source),
         target = 
           as.character(target),
         type = as.character(type)) %>%
  group_by(source, target, type) %>%
    summarise(weights=n()) %>%
  filter(source!= target) %>%
  ungroup()
```

### Nodes

```{r}
#| code-fold: true
#| code-summary: "Show the code" 
mc3_nodes <- as_tibble(mc3_data$nodes) %>%
  mutate(id = as.character(id), 
         type = as.character(type), 
         country = as.character(country), 
         product_services = as.character(product_services),
  # Convert to character first to unlist, then revert to numeric form 
         revenue_omu = as.numeric(as.character(revenue_omu))) %>%
  # Reorganize columns 
  select(id, country, type, revenue_omu, product_services)

```
 
:::

```{r}
#| code-fold: true
#| code-summary: "Show the code" 
id1 <- mc3_edges %>%
  select(source) %>%
  rename(id = source)
id2 <- mc3_edges %>%
  select(target) %>%
  rename(id = target)

mc3_nodes1 <- bind_rows(id1, id2) %>%
  distinct() %>%
  left_join(mc3_nodes, by = "id", unmatched = "drop")


```


```{r}
#| code-fold: true
#| code-summary: "Show the code" 
mc3_graph <- tbl_graph(nodes = mc3_nodes1,
                       edges = mc3_edges,
                       directed = FALSE) %>%
  mutate(betweenness_centrality = centrality_betweenness(),
         closeness_centrality = centrality_closeness())

```





```{r}
#| code-fold: true
#| code-summary: "Show the code" 
mc3_graph %>%
  filter(betweenness_centrality >= 300000) %>%
ggraph(layout = "fr") +
  geom_edge_link(aes(alpha=0.5)) +
  geom_node_point(aes(
    size = betweenness_centrality,
    colors = "lightblue",
    alpha=0.5)) +
  scale_size_continuous(range=c(1,10)) +
  theme_graph()
```






```{r}
#| code-fold: true
#| code-summary: "Show the code" 
mc3_graph_directed <- tbl_graph(nodes = mc3_nodes1,
                       edges = mc3_edges,
                       directed = TRUE) %>%
  mutate(betweenness_centrality = centrality_betweenness(),
         closeness_centrality = centrality_closeness())


```











